<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                         http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-3.2.xsd">

        <!-- 扫描controller层 -->
        <context:component-scan base-package="com.project.controller" />

        <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
        <!-- 指定自己定义的validator -->
        <mvc:annotation-driven></mvc:annotation-driven>

        <!-- jsp视图解析器 -->
        <bean id="viewResolverCommon" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="prefix" value="/views/"/>
            <property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
            <property name="viewClass">
                <value>org.springframework.web.servlet.view.InternalResourceView</value>
            </property>
        </bean>

        <!--<mvc:view-controller path="/" view-name="redirect:/login" />-->
        <!--<mvc:resources mapping="/css/**" location="/css/" />-->
        <!--<mvc:resources mapping="/js/**" location="/js/" />-->
        <!--<mvc:resources mapping="/lib/**" location="/lib/" />-->
        <!--<mvc:resources mapping="/static/**" location="/static/" />-->
        <!--<mvc:resources mapping="/images/**" location="/images/" />-->
        <!--<mvc:resources mapping="/ueditor/**" location="/ueditor/" />-->
        <mvc:resources mapping="/views/**" location="/views/" />

</beans>
